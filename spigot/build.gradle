buildscript {
    dependencies {
        classpath "info.u-team.curse_gradle_uploader:curse_gradle_uploader:${curse_gradle_uploader_version}"
    }
}

plugins {
    id 'java'
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'com.modrinth.minotaur'
apply plugin: 'info.u_team.curse_gradle_uploader'
apply plugin: 'io.papermc.hangar-publish-plugin'
apply plugin: 'xyz.jpenilla.run-paper'

apply from: "https://raw.githubusercontent.com/henkelmax/mod-gradle-scripts/${mod_gradle_script_version}/mod.gradle"

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

repositories {
    mavenCentral()
    maven { url = 'https://libraries.minecraft.net/' }
}

dependencies {
    compileOnly "org.spigotmc:spigot-api:${spigot_version}"

    implementation 'com.google.code.gson:gson:2.10'
}

processResources {
    filesMatching('plugin.yml') {
        expand 'mod_version': mod_version
    }
}
tasks.register('generateJava', Copy) {
    expand 'mod_version': mod_version
}

sourceSets.main.java {
    srcDir "${layout.buildDirectory.asFile.get()}/generated/java"
}
compileJava.dependsOn generateJava

shadowJar {
    dependencies {
        exclude(dependency('com.mojang:brigadier:.*'))
        exclude(dependency('com.google.code.findbugs:jsr305:.*'))
    }
}

tasks.register('copyJarToServer') {
    doLast {
        delete {
            delete "${projectDir}/run/plugins/${archivesBaseName}-${version}.jar"
        }
        copy {
            from "${layout.buildDirectory.asFile.get()}/libs/${archivesBaseName}-${version}.jar"
            into "${projectDir}/run/plugins"
        }
    }
}

build.finalizedBy(copyJarToServer)

tasks.register('runBukkitServer') {
    doLast {
        javaexec {
            debug = true
            workingDir = "${projectDir}/run"
            main = '-jar';
            args = [
                    "${projectDir}/run/craftbukkit.jar",
                    'nogui'
            ]
        }
    }
}

tasks {
    runServer {
        minecraftVersion(minecraft_version)
    }
}

build.dependsOn(shadowJar)
runBukkitServer.dependsOn(build)
runServer.dependsOn(build)
