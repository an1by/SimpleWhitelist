plugins {
    id 'com.gradleup.shadow' version "${shadow_version}" apply false
    id 'com.matthewprenger.cursegradle' version "${cursegradle_version}" apply false
    id 'com.modrinth.minotaur' version "${minotaur_version}" apply false
    id 'mod-update' version "${mod_update_version}" apply false
    id 'fabric-loom' version "${fabric_loom_version}" apply false
    id 'io.papermc.hangar-publish-plugin' version "${hangar_publish_version}" apply false
    id 'io.papermc.paperweight.userdev' version "${paperweight_version}" apply false
    id 'xyz.jpenilla.run-paper' version "${run_task_version}" apply false
}

apply from: "https://raw.githubusercontent.com/henkelmax/mod-gradle-scripts/${mod_gradle_script_version}/taskutils.gradle"

tasks.register('01-publishBungeeCord') {
    group = 'simplewhitelist'
    doLast {
        runGradleTasks(['common:clean', 'bungeecord:clean'], ['bungeecord:modrinth', 'bungeecord:publishAllPublicationsToHangar'])
    }
}

tasks.register('02-publishVelocity') {
    group = 'simplewhitelist'
    doLast {
        runGradleTasks(['common:clean', 'velocity:clean'], ['velocity:modrinth', 'velocity:publishAllPublicationsToHangar'])
    }
}

tasks.register('03-publishPaper') {
    group = 'simplewhitelist'
    doLast {
        runGradleTasks(['common:clean'], ['paper:modrinth', 'paper:publishAllPublicationsToHangar'])
    }
}

tasks.register('04-publishNeoForge') {
    group = 'simplewhitelist'
    doLast {
        runGradleTasks(['common:clean', 'neoforge:clean'], ['neoforge:modrinth'])
    }
}

tasks.register('05-publishFabric') {
    group = 'simplewhitelist'
    doLast {
        runGradleTasks(['common:clean', 'fabric:clean'], ['fabric:modrinth'])
    }
}

//tasks.register('06-publishQuilt', GradleBuild) {
//    group = 'simplewhitelist'
//    dir = 'quilt'
//    tasks = ['uploadMod']
//}
